let response: unknown;

try {
  const responseObject = await fetch(requestUrl, requestParams{{#if header}} as RequestInit{{/if}});
  response = await responseObject.json();

  if (!responseObject.ok) {
    throw new ApiError({
      message: 'Api error fetching {{name}}',
      status: responseObject.status,
      statusText: responseObject.statusText,
      response,
      headers: responseObject.headers,
    });
  }
} catch (error) {
  if (error instanceof ApiError) {
    throw error;
  } else {
    throw error as ClientCodeError;
  }
}

{{#if response}}
  const responseSchema = {{json response}};

  function isResponse(obj: unknown): obj is {{capitalize name}}Response {
    const isValid = ajv.validate(responseSchema, obj);

    return !!isValid;
  }

  if (!isResponse(response)) {
    throw new ResponseValidationError({
      message: 'Response schema validation error',
      method: '{{name}}',
    });
  }
{{/if}}

return response;
